name: C/C++ CI

on:
  push:
    branches: [ add_actions_test  ]
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2
    - name: add qt repo
      run: |
        sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-xenial -y
        sudo apt-get update -qq
    - name: install qt
      run:  sudo apt-get -y install qt512base qt512tools libgl1-mesa-dev
    - name: build
      run: |
        source /opt/qt*/bin/qt*-env.sh || true
        echo "::set-output name=VER_TAG_NAME::$(cat main.cpp |grep 'const QString APP'|awk -F\" '{print $2;}')"
        qmake CONFIG+=release PREFIX=/usr
        make -j$(nproc)
        mkdir -p appdir/usr/bin
        cp QTjsonDiff appdir/usr/bin/QTjsonDiff
        mkdir -p appdir/usr/share/icons/
        cp diff.png appdir/usr/share/icons/
        mkdir -p appdir/usr/share/applications/
        cp qtjsondiff.desktop appdir/usr/share/applications/
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage
        cp ./Qt_JSON_diff*.AppImage ./Qt_JSON_diff.AppImage
        ls -l
        id: build
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release CI ${{ github.ref }}
        tag_name: ${{ steps.build.outputs.VER_TAG_NAME }}
        release_name: Release CI ${{ steps.build.outputs.VER_TAG_NAME }}  
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Qt_JSON_diff.AppImage
        asset_name: Qt_JSON_diff-${{ env.TAG_NAME }}-x86_64.AppImage
        asset_content_type: application/octet-stream
